title: 
Java - Introduction 
Java is a popular programming language, created in 1995.
It is owned by Oracle, and more than 3 billion devices run Java.
It is used for:
Mobile applications (specially Android apps)
Desktop applications
Web applications
Web servers and application servers
Games
Database connection
And much, much more!

code: 
public class Main {
  public static void main(String[] args) {
    System.out.println("Hello World");
  }
}

user_id: 

attribution: 
https://www.w3schools.com/

description:
Java is a popular programming language.
Java is used to develop mobile apps, web apps, desktop apps, games and much more.


title:
Java - Variables
Variables are containers for storing data values.
In Java, there are different types of variables, for example:
String - stores text, such as "Hello". String values are surrounded by double quotes
int - stores integers (whole numbers), without decimals, such as 123 or -123
float - stores floating point numbers, with decimals, such as 19.99 or -19.99
char - stores single characters, such as 'a' or 'B'. Char values are surrounded by single quotes
boolean - stores values with two states: true or false

code:
String name = "John";
System.out.println(name);

int myNum;
myNum = 15;
System.out.println(myNum);

user_id: 

attribution: 
https://www.w3schools.com/

description:
To create a variable, you must specify the type and assign it a value:


title:
Java - Data Types
A variable in Java must be a specified data type:
A primitive data type specifies the size and type of variable values, and it has no additional methods.
Numbers - Primitive number types are divided into two groups:
Integer types stores whole numbers, positive or negative (such as 123 or -456), without decimals. Valid types are byte, short, int and long. Which type you should use, depends on the numeric value.
Floating point types represents numbers with a fractional part, containing one or more decimals. There are two types: float and double.
Boolean Types - A boolean data type is declared with the boolean keyword and can only take the values true or false:
Characters - The char data type is used to store a single character. The character must be surrounded by single quotes, like 'A' or 'c':
Non-primitive data types are called reference types because they refer to objects.

code:
int myNum = 5;               // Integer (whole number)
float myFloatNum = 5.99f;    // Floating point number
char myLetter = 'D';         // Character
boolean myBool = true;       // Boolean
String myText = "Hello";     // String

user_id: 

attribution: 
https://www.w3schools.com/

description:
Examples of non-primitive types are Strings, Arrays, Classes, Interface, 


title:
Java Conditions and If Statements
Java supports the usual logical conditions from mathematics:
Less than: a < b
Less than or equal to: a <= b
Greater than: a > b
Greater than or equal to: a >= b
Equal to a == b
Not Equal to: a != b
You can use these conditions to perform different actions for different decisions.
Java has the following conditional statements:
Use if to specify a block of code to be executed, if a specified condition is true
Use else to specify a block of code to be executed, if the same condition is false
Use else if to specify a new condition to test, if the first condition is false
Use switch to specify many alternative blocks of code to be executed

code:
if (condition) {
  // block of code to be executed if the condition is true
} else {
  // block of code to be executed if the condition is false
}

int time = 20;
if (time < 18) {
  System.out.println("Good day.");
} else {
  System.out.println("Good evening.");
}
// Outputs "Good evening."

user_id:

attribution:
https://www.w3schools.com/

description:
In the example above we use two variables, x and y, to test whether x is greater than y (using the > operator). As x is 20, and y is 18, and we know that 20 is greater than 18, we print to the screen that "x is greater than y".


title:
Java - For Loop
When you know exactly how many times you want to loop through a block of code, use the for loop instead of a while loop:

code:
for (int i = 0; i < 5; i++) {
  System.out.println(i);
}

user_id:

attribution:
https://www.w3schools.com/

description: 
Statement 1 sets a variable before the loop starts (int i = 0).
Statement 2 defines the condition for the loop to run (i must be less than 5). If the condition is true, the loop will start over again, if it is false, the loop will end.
Statement 3 increases a value (i++) each time the code block in the loop has been executed.


_____________________________________________________________________

TITLE - Java Classes and Objects
CODE - 
public class Main {
  int x = 5;

  public static void main(String[] args) {
    Main myObj = new Main();
    System.out.println(myObj.x);
  }
}
DES - Java is an object-oriented programming language.
Everything in Java is associated with classes and objects, along with its attributes and methods. For example: in real life, a car is an object. The car has attributes, such as weight and color, and methods, such as drive and brake.
A Class is like an object constructor, or a "blueprint" for creating objects.
To create a class, use the keyword class:
Create an Object
In Java, an object is created from a class. We have already created the class named Main, so now we can use this to create objects.
To create an object of Main, specify the class name, followed by the object name, and use the keyword new:
USER ID - 2
ATTRI - https://www.w3schools.com/


TITLE - Java Methods
CODE - 
public class Main {
  static void myMethod() {
    System.out.println("I just got executed!");
  }

  public static void main(String[] args) {
    myMethod();
  }
}

DES - A method is a block of code which only runs when it is called.
You can pass data, known as parameters, into a method.
Methods are used to perform certain actions, and they are also known as functions.
Why use methods? To reuse code: define the code once, and use it many times.
A method must be declared within a class. It is defined with the name of the method, followed by parentheses (). Java provides some pre-defined methods, such as System.out.println(), but you can also create your own methods to perform certain actions:
To call a method in Java, write the method's name followed by two parentheses () and a semicolon;
In the following example, myMethod() is used to print a text (the action), when it is called:
USER ID - 2
ATTRI - https://www.w3schools.com/


TITLE - Java Booleans
CODE - 
boolean isJavaFun = true;
boolean isFishTasty = false;
System.out.println(isJavaFun);     // Outputs true
System.out.println(isFishTasty);   // Outputs false
int x = 10;
int y = 9;
System.out.println(x > y); // returns true, because 10 is higher than 9

DES - Java Booleans
Very often, in programming, you will need a data type that can only have one of two values, like:
YES / NO
ON / OFF
TRUE / FALSE
For this, Java has a boolean data type, which can take the values true or false.
A boolean type is declared with the boolean keyword and can only take the values true or false:
A Boolean expression is a Java expression that returns a Boolean value: true or false.
You can use a comparison operator, such as the greater than (>) operator to find out if an expression (or a variable) is true:

USER ID - 2
ATTRI - https://www.w3schools.com/


TITLE - Java Strings
CODE - 
String greeting = "Hello";
String txt = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
System.out.println("The length of the txt string is: " + txt.length());

DES - Strings are used for storing text.
A String variable contains a collection of characters surrounded by double quotes:
A String in Java is actually an object, which contain methods that can perform certain operations on strings. For example, the length of a string can be found with the length() method:
USER ID - 2
ATTRI - https://www.w3schools.com/



TITLE - Java Constructors
CODE - 
// Create a Main class
public class Main {
  int x;  // Create a class attribute

  // Create a class constructor for the Main class
  public Main() {
    x = 5;  // Set the initial value for the class attribute x
  }

  public static void main(String[] args) {
    Main myObj = new Main(); // Create an object of class Main (This will call the constructor)
    System.out.println(myObj.x); // Print the value of x
  }
}
//Output 5

DES - A constructor in Java is a special method that is used to initialize objects. The constructor is called when an object of a class is created. It can be used to set initial values for object attributes:
USER ID - 
ATTRI - https://www.w3schools.com/



